Halma is a game which is slightly similar to Chinese Checkers.The gameboard is checkered and divided into 16×16 squares. The game is played by two or four players seated at opposing corners of the board. The game is won by being first to transfer all of one's pieces from one's own camp into the camp in the opposing corner.

In this project I have developed an Artificial Intelligent Agent to pose as a player in a timed Halma game. It generates an optimal move when its turn comes. The move generated will maximize the agent's chance of winning the game. 



The input file will be as follows:
  First line: A string SINGLE or GAME to let you know whether you are playing a single move (and can use all of the available time for it) of playing a full game with potentially many moves.

  Second line: A string BLACK or WHITE indicating which color you play. The colors will always be organized on the board as follows:
  (black starts in the top-left corner and white in the bottom-right).

  Third line: A strictly positive floating point number indicating the amount of total play time remaining for your agent.

  Next 16 lines: Description of the game board, with 16 lines of 16 symbols each:
   W for a grid cell occupied by a white piece
   B for a grid cell occupied by a black piece
   . (a dot) for an empty grid cell
   
   
   
The output will be an optimal move generated by the agent which may be of two forms:
    E FROM_X,FROM_Y TO_X,TO_Y – your agent moves one of your pieces from location FROM_X, FROM_Y to adjacent empty location TO_X, TO_Y.
    J FROM_X,FROM_Y TO_X,TO_Y – your agent moves one of your pieces from location FROM_X,FROM_Y to empty location TO_X,TO_Y by jumping over a piece in between. 
   

